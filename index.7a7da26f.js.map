{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["(function () {\nvar $197cd56b15c33885$exports = {};\n\"use strict\";\nvar $197cd56b15c33885$var$button = document.querySelector(\"button\");\nvar $197cd56b15c33885$var$table = document.querySelector(\"tbody\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$size = 4;\nfunction $197cd56b15c33885$var$generateEmptyBoard() {\n    var emptyBoard = [];\n    for(var i = 0; i < $197cd56b15c33885$var$size; i++)emptyBoard.push([\n        0,\n        0,\n        0,\n        0\n    ]);\n    return emptyBoard;\n}\nvar $197cd56b15c33885$var$score = 0;\nvar $197cd56b15c33885$var$board = $197cd56b15c33885$var$generateEmptyBoard();\nfunction $197cd56b15c33885$var$emptyCell() {\n    for(var i = 0; i < $197cd56b15c33885$var$size; i++){\n        if ($197cd56b15c33885$var$board[i].includes(0)) return true;\n    }\n    return false;\n}\nfunction $197cd56b15c33885$var$addNewTile() {\n    var num;\n    if (Math.random() < 0.1) num = 4;\n    else num = 2;\n    while($197cd56b15c33885$var$emptyCell()){\n        var r = Math.floor(Math.random() * $197cd56b15c33885$var$size);\n        var c = Math.floor(Math.random() * $197cd56b15c33885$var$size);\n        if ($197cd56b15c33885$var$board[r][c] === 0) {\n            $197cd56b15c33885$var$board[r][c] = num;\n            break;\n        }\n    }\n    $197cd56b15c33885$var$updateCells();\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", $197cd56b15c33885$var$start);\nfunction $197cd56b15c33885$var$start() {\n    $197cd56b15c33885$var$board = $197cd56b15c33885$var$generateEmptyBoard();\n    $197cd56b15c33885$var$score = 0;\n    $197cd56b15c33885$var$button.classList.replace(\"start\", \"restart\");\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$button.innerText = \"Restart\";\n    $197cd56b15c33885$var$addNewTile();\n    $197cd56b15c33885$var$addNewTile();\n}\nfunction $197cd56b15c33885$var$loseGame() {\n    if ($197cd56b15c33885$var$emptyCell()) return false;\n    for(var r = 0; r < $197cd56b15c33885$var$size; r++)for(var c = 0; c < $197cd56b15c33885$var$size - 1; c++){\n        if ($197cd56b15c33885$var$board[r][c] === $197cd56b15c33885$var$board[r][c + 1]) return false;\n    }\n    for(var r1 = 0; r1 < $197cd56b15c33885$var$size - 1; r1++)for(var c1 = 0; c1 < $197cd56b15c33885$var$size; c1++){\n        if ($197cd56b15c33885$var$board[r1][c1] === $197cd56b15c33885$var$board[r1 + 1][c1]) return false;\n    }\n    return true;\n}\nfunction $197cd56b15c33885$var$updateCells() {\n    for(var r = 0; r < $197cd56b15c33885$var$size; r++)for(var c = 0; c < $197cd56b15c33885$var$size; c++){\n        var cell = $197cd56b15c33885$var$table.rows[r].cells[c];\n        var value = $197cd56b15c33885$var$board[r][c];\n        cell.innerText = \"\";\n        cell.classList.value = \"\";\n        cell.classList.add(\"field-cell\");\n        if (value > 0) {\n            cell.innerText = value;\n            cell.classList.add(\"field-cell--\".concat(value));\n        }\n        if (value === 2048) {\n            $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$button.classList.replace(\"restart\", \"start\");\n            $197cd56b15c33885$var$button.innerText = \"Start\";\n        }\n    }\n    $197cd56b15c33885$var$gameScore.innerText = $197cd56b15c33885$var$score;\n    if ($197cd56b15c33885$var$loseGame()) $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n}\ndocument.addEventListener(\"keyup\", function(events) {\n    var boardCopy = $197cd56b15c33885$var$board.map(function(arr) {\n        return arr.slice();\n    });\n    events.preventDefault();\n    switch(events.code){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$moveDown();\n            break;\n    }\n    if ($197cd56b15c33885$var$boardChange($197cd56b15c33885$var$board, boardCopy)) $197cd56b15c33885$var$addNewTile();\n    $197cd56b15c33885$var$updateCells();\n});\nfunction $197cd56b15c33885$var$boardChange(currentBoard, boardCopy) {\n    for(var r = 0; r < $197cd56b15c33885$var$size; r++)for(var c = 0; c < $197cd56b15c33885$var$size; c++){\n        if (currentBoard[r][c] !== boardCopy[r][c]) return true;\n    }\n    return false;\n}\nfunction $197cd56b15c33885$var$slide(row) {\n    var newRow = row.filter(function(el) {\n        return el !== 0;\n    });\n    for(var i = 0; i < $197cd56b15c33885$var$size - 1; i++)if (newRow[i] === newRow[i + 1] && isFinite(newRow[i])) {\n        newRow[i] *= 2;\n        newRow[i + 1] = 0;\n        $197cd56b15c33885$var$score += newRow[i];\n    }\n    newRow = newRow.filter(function(el) {\n        return el !== 0;\n    });\n    while(newRow.length < $197cd56b15c33885$var$size)newRow.push(0);\n    return newRow;\n}\nfunction $197cd56b15c33885$var$move(direction) {\n    for(var i = 0; i < $197cd56b15c33885$var$size; i++){\n        var rowOrColumn = void 0;\n        if (direction === \"left\" || direction === \"right\") rowOrColumn = $197cd56b15c33885$var$board[i];\n        else if (direction === \"up\" || direction === \"down\") rowOrColumn = [\n            $197cd56b15c33885$var$board[0][i],\n            $197cd56b15c33885$var$board[1][i],\n            $197cd56b15c33885$var$board[2][i],\n            $197cd56b15c33885$var$board[3][i]\n        ];\n        if (direction === \"right\" || direction === \"down\") rowOrColumn.reverse();\n        rowOrColumn = $197cd56b15c33885$var$slide(rowOrColumn);\n        if (direction === \"right\" || direction === \"down\") rowOrColumn.reverse();\n        if (direction === \"left\" || direction === \"right\") $197cd56b15c33885$var$board[i] = rowOrColumn;\n        else if (direction === \"up\" || direction === \"down\") for(var j = 0; j < $197cd56b15c33885$var$size; j++)$197cd56b15c33885$var$board[j][i] = rowOrColumn[j];\n    }\n}\nfunction $197cd56b15c33885$var$moveLeft() {\n    $197cd56b15c33885$var$move(\"left\");\n}\nfunction $197cd56b15c33885$var$moveRight() {\n    $197cd56b15c33885$var$move(\"right\");\n}\nfunction $197cd56b15c33885$var$moveUp() {\n    $197cd56b15c33885$var$move(\"up\");\n}\nfunction $197cd56b15c33885$var$moveDown() {\n    $197cd56b15c33885$var$move(\"down\");\n}\n\n})();\n//# sourceMappingURL=index.7a7da26f.js.map\n","'use strict';\n\nconst button = document.querySelector('button');\nconst table = document.querySelector('tbody');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst gameScore = document.querySelector('.game-score');\n\nconst size = 4;\n\nfunction generateEmptyBoard() {\n  const emptyBoard = [];\n\n  for (let i = 0; i < size; i++) {\n    emptyBoard.push([0, 0, 0, 0]);\n  }\n\n  return emptyBoard;\n}\n\nlet score = 0;\nlet board = generateEmptyBoard();\n\nfunction emptyCell() {\n  for (let i = 0; i < size; i++) {\n    if (board[i].includes(0)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction addNewTile() {\n  let num;\n\n  if (Math.random() < 0.1) {\n    num = 4;\n  } else {\n    num = 2;\n  }\n\n  while (emptyCell()) {\n    const r = Math.floor(Math.random() * size);\n    const c = Math.floor(Math.random() * size);\n\n    if (board[r][c] === 0) {\n      board[r][c] = num;\n      break;\n    }\n  }\n\n  updateCells();\n}\n\nbutton.addEventListener('click', start);\n\nfunction start() {\n  board = generateEmptyBoard();\n  score = 0;\n\n  button.classList.replace('start', 'restart');\n\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  button.innerText = 'Restart';\n\n  addNewTile();\n  addNewTile();\n}\n\nfunction loseGame() {\n  if (emptyCell()) {\n    return false;\n  }\n\n  for (let r = 0; r < size; r++) {\n    for (let c = 0; c < size - 1; c++) {\n      if (board[r][c] === board[r][c + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let r = 0; r < size - 1; r++) {\n    for (let c = 0; c < size; c++) {\n      if (board[r][c] === board[r + 1][c]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction updateCells() {\n  for (let r = 0; r < size; r++) {\n    for (let c = 0; c < size; c++) {\n      const cell = table.rows[r].cells[c];\n      const value = board[r][c];\n\n      cell.innerText = '';\n      cell.classList.value = '';\n      cell.classList.add('field-cell');\n\n      if (value > 0) {\n        cell.innerText = value;\n        cell.classList.add(`field-cell--${value}`);\n      }\n\n      if (value === 2048) {\n        messageWin.classList.remove('hidden');\n        button.classList.replace('restart', 'start');\n        button.innerText = 'Start';\n      }\n    }\n  }\n\n  gameScore.innerText = score;\n\n  if (loseGame()) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\ndocument.addEventListener('keyup', events => {\n  const boardCopy = board.map(arr => arr.slice());\n\n  events.preventDefault();\n\n  switch (events.code) {\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n  }\n\n  if (boardChange(board, boardCopy)) {\n    addNewTile();\n  }\n\n  updateCells();\n});\n\nfunction boardChange(currentBoard, boardCopy) {\n  for (let r = 0; r < size; r++) {\n    for (let c = 0; c < size; c++) {\n      if (currentBoard[r][c] !== boardCopy[r][c]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction slide(row) {\n  let newRow = row.filter(el => el !== 0);\n\n  for (let i = 0; i < size - 1; i++) {\n    if (newRow[i] === newRow[i + 1] && isFinite(newRow[i])) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n    }\n  }\n\n  newRow = newRow.filter(el => el !== 0);\n\n  while (newRow.length < size) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction move(direction) {\n  for (let i = 0; i < size; i++) {\n    let rowOrColumn;\n\n    if (direction === 'left' || direction === 'right') {\n      rowOrColumn = board[i];\n    } else if (direction === 'up' || direction === 'down') {\n      rowOrColumn = [board[0][i], board[1][i], board[2][i], board[3][i]];\n    }\n\n    if (direction === 'right' || direction === 'down') {\n      rowOrColumn.reverse();\n    }\n\n    rowOrColumn = slide(rowOrColumn);\n\n    if (direction === 'right' || direction === 'down') {\n      rowOrColumn.reverse();\n    }\n\n    if (direction === 'left' || direction === 'right') {\n      board[i] = rowOrColumn;\n    } else if (direction === 'up' || direction === 'down') {\n      for (let j = 0; j < size; j++) {\n        board[j][i] = rowOrColumn[j];\n      }\n    }\n  }\n}\n\nfunction moveLeft() {\n  move('left');\n}\n\nfunction moveRight() {\n  move('right');\n}\n\nfunction moveUp() {\n  move('up');\n}\n\nfunction moveDown() {\n  move('down');\n}\n"],"names":["$197cd56b15c33885$var$button","document","querySelector","$197cd56b15c33885$var$table","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$generateEmptyBoard","emptyBoard","i","push","$197cd56b15c33885$var$score","$197cd56b15c33885$var$board","$197cd56b15c33885$var$emptyCell","includes","$197cd56b15c33885$var$addNewTile","num","Math","random","r","floor","c","$197cd56b15c33885$var$updateCells","cell","rows","cells","value","innerText","classList","add","concat","remove","replace","$197cd56b15c33885$var$loseGame","$197cd56b15c33885$var$size","r1","c1","$197cd56b15c33885$var$move","direction","rowOrColumn","reverse","$197cd56b15c33885$var$slide","row","newRow","filter","el","isFinite","length","j","addEventListener","events","boardCopy","map","arr","slice","preventDefault","code","$197cd56b15c33885$var$boardChange","currentBoard"],"version":3,"file":"index.7a7da26f.js.map"}